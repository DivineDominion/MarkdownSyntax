#if !canImport(ObjectiveC)
import XCTest

extension ContentBlockPositionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ContentBlockPositionTests = [
        ("testBlockquotePosition", testBlockquotePosition),
        ("testCodeBlockPosition", testCodeBlockPosition),
        ("testFootnoteDefinitionPosition", testFootnoteDefinitionPosition),
        ("testHeadingWithInline", testHeadingWithInline),
        ("testHTMLCommentPosition", testHTMLCommentPosition),
        ("testHTMLPosition", testHTMLPosition),
        ("testParagraphWithInline", testParagraphWithInline),
        ("testParagraphWithInlineCode", testParagraphWithInlineCode),
    ]
}

extension ContentInlinePositionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ContentInlinePositionTests = [
        ("testAutoLinkRange", testAutoLinkRange),
        ("testEmphasisRange", testEmphasisRange),
        ("testEmphasisUnderscoreRange", testEmphasisUnderscoreRange),
        ("testFootnoteReferenceRange", testFootnoteReferenceRange),
        ("testHTMLInlineCommentPosition", testHTMLInlineCommentPosition),
        ("testHTMLInlineRange", testHTMLInlineRange),
        ("testImageRange", testImageRange),
        ("testInlineCodeRange", testInlineCodeRange),
        ("testInlineCodeRangeMultiBackticks", testInlineCodeRangeMultiBackticks),
        ("testInternalLinkRange", testInternalLinkRange),
        ("testLinkRange", testLinkRange),
        ("testLinkWithEmptyChildRange", testLinkWithEmptyChildRange),
        ("testSoftBreakRange", testSoftBreakRange),
        ("testSpaceLineBreakRange", testSpaceLineBreakRange),
        ("testStrikethroughRange", testStrikethroughRange),
        ("testStrongRange", testStrongRange),
        ("testStrongUnderscoreRange", testStrongUnderscoreRange),
    ]
}

extension ParserBlockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParserBlockTests = [
        ("testBlockquote", testBlockquote),
        ("testCode", testCode),
        ("testFootnoteDefinition", testFootnoteDefinition),
        ("testHeading", testHeading),
        ("testHTML", testHTML),
        ("testHTMLComment", testHTMLComment),
        ("testList", testList),
        ("testListHierarchy", testListHierarchy),
        ("testListHierarchySpread", testListHierarchySpread),
        ("testListOrdered", testListOrdered),
        ("testListSpread", testListSpread),
        ("testListTask", testListTask),
        ("testTable", testTable),
        ("testThematicBreak", testThematicBreak),
    ]
}

extension ParserInlineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParserInlineTests = [
        ("testAutoLink", testAutoLink),
        ("testEmphasis", testEmphasis),
        ("testEmphasisUnderscore", testEmphasisUnderscore),
        ("testFootnoteReference", testFootnoteReference),
        ("testHTMLInline", testHTMLInline),
        ("testImage", testImage),
        ("testImageWithLinkInsideAlt", testImageWithLinkInsideAlt),
        ("testInlineCode", testInlineCode),
        ("testInternalLink", testInternalLink),
        ("testInvalidLink", testInvalidLink),
        ("testLineBreak", testLineBreak),
        ("testLink", testLink),
        ("testLinkWithEmptyChildTitle", testLinkWithEmptyChildTitle),
        ("testSoftBreak", testSoftBreak),
        ("testSpaceLineBreak", testSpaceLineBreak),
        ("testStrikethrough", testStrikethrough),
        ("testStrong", testStrong),
        ("testStrongUnderscore", testStrongUnderscore),
    ]
}

extension ParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParserTests = [
        ("testLineOffsets", testLineOffsets),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ContentBlockPositionTests.__allTests__ContentBlockPositionTests),
        testCase(ContentInlinePositionTests.__allTests__ContentInlinePositionTests),
        testCase(ParserBlockTests.__allTests__ParserBlockTests),
        testCase(ParserInlineTests.__allTests__ParserInlineTests),
        testCase(ParserTests.__allTests__ParserTests),
    ]
}
#endif
